/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import Business.ComputerCollection;
import Business.DataValidation;
import Business.HardwareCollection;
import Business.PrinterCollection;
import javax.swing.JPanel;
import java.lang.Exception;
import Business.Product;
import Business.SoftwareCollection;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.Rectangle;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author prane
 */
public class AddProductJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AddProductJPanel
     */
    private JPanel userProcessContainer;
    private ComputerCollection computerCollection;
    private PrinterCollection printerCollection;
    private HardwareCollection hardwareCollection;
    private SoftwareCollection softwareCollection;
    public int pid=0;
    
    public AddProductJPanel(JPanel userProcessContainer, ComputerCollection computerCollection, PrinterCollection printerCollection, SoftwareCollection softwareCollection, HardwareCollection hardwareCollection) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
         this.computerCollection=computerCollection;
         this.printerCollection=printerCollection;
         this.hardwareCollection=hardwareCollection;
         this.softwareCollection=softwareCollection;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        typejTextField = new javax.swing.JTextField();
        modeljTextField = new javax.swing.JTextField();
        modelidjTextField = new javax.swing.JTextField();
        basepricejTextField = new javax.swing.JTextField();
        vendornamejTextField = new javax.swing.JTextField();
        ceilingjTextField = new javax.swing.JTextField();
        floorpricejTextField = new javax.swing.JTextField();
        attachjButton = new javax.swing.JButton();
        SubmitjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionjTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        benifitsjTextArea = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        featuresjTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        profilepictureLbl = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel1.setText("Name ");
        jLabel1.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 100, -1, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel2.setText("Type");
        jLabel2.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 130, 40, -1));

        jLabel3.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel3.setText("Model");
        jLabel3.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 160, -1, -1));

        jLabel4.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel4.setText("Model ID");
        jLabel4.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 190, 80, -1));

        jLabel5.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel5.setText("Description");
        jLabel5.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 240, -1, -1));

        jLabel6.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel6.setText("Vendor Name");
        jLabel6.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, -1, -1));

        jLabel7.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel7.setText("Base Price");
        jLabel7.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 350, -1, -1));

        jLabel8.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel8.setText("Ceiling Price");
        jLabel8.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 390, -1, -1));

        jLabel9.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel9.setText("Floor Price");
        jLabel9.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 430, -1, -1));

        jLabel10.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel10.setText("Features");
        jLabel10.setMaximumSize(new java.awt.Dimension(290, 290));
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 490, -1, -1));

        jLabel11.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel11.setText("Display Picture");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 100, -1, -1));

        jLabel12.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jLabel12.setText("Benifits");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 570, -1, -1));
        add(nameTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 200, -1));
        add(typejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 200, -1));
        add(modeljTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 160, 200, -1));
        add(modelidjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 190, 200, -1));
        add(basepricejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 200, -1));
        add(vendornamejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 310, 200, -1));
        add(ceilingjTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 390, 200, -1));
        add(floorpricejTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 430, 200, -1));

        attachjButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        attachjButton.setText("Attach");
        attachjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachjButtonActionPerformed(evt);
            }
        });
        add(attachjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 280, 110, -1));

        SubmitjButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        SubmitjButton.setText("Submit");
        SubmitjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitjButtonActionPerformed(evt);
            }
        });
        add(SubmitjButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 650, 200, 30));

        descriptionjTextArea.setColumns(20);
        descriptionjTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionjTextArea);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 200, 80));

        benifitsjTextArea.setColumns(20);
        benifitsjTextArea.setRows(5);
        jScrollPane2.setViewportView(benifitsjTextArea);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 550, 200, 80));

        featuresjTextArea.setColumns(20);
        featuresjTextArea.setRows(5);
        jScrollPane3.setViewportView(featuresjTextArea);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 470, 200, 70));

        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setText("<--Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));

        jLabel13.setFont(new java.awt.Font("Calibri Light", 1, 24)); // NOI18N
        jLabel13.setText("Provide the details of the Product");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 400, -1));

        profilepictureLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        add(profilepictureLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 130, 120, 140));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout =(CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void SubmitjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitjButtonActionPerformed
        
     try
     {
        String flag="true";
        String name =nameTextField.getText();
        String type=typejTextField.getText();
        String model=modelidjTextField.getText();
        String modelid=modelidjTextField.getText();
        String description = descriptionjTextArea.getText();
        String vendorname=vendornamejTextField.getText();
        String baseprice=basepricejTextField.getText();
        String ceilingprice=ceilingjTextField.getText();
        String floorprice = floorpricejTextField.getText();
        String features=featuresjTextArea.getText();
        String benifits=benifitsjTextArea.getText();
        
        DataValidation dv = new DataValidation();
        
          if(dv.numberWithSizeCheck(modelid,5))
        {
            //modelid= modelid;
        }
        else
        {
           modelidjTextField.setBackground(Color.red);   
           flag="false";
        }
          if(dv.alphabetCheck(name))
          {
              //Do nothing
          }
          else
          {
              nameTextField.setBackground(Color.red);
              flag="false";
          }
          if(dv.alphabetCheck(type))
          {
              //Do nothing
          }
          else
          {
              
              typejTextField.setBackground(Color.red);
              flag="false";
          }
          if(dv.checkNumeric(model))
          {
              //Do nothing
          }
          else
          {
              
              modeljTextField.setBackground(Color.red);
              flag="false";
          }
          if(dv.alphabetCheck(description))
          {
              //Do nothing
          }
          else
          {
              
              descriptionjTextArea.setBackground(Color.red);
           
              flag="false";
          }
          if(dv.alphabetCheck(vendorname))
          {
              //Do nothing
          }
          else
          {
              vendornamejTextField.setBackground(Color.red);
              flag="false";
          }
          if(dv.checkNumeric(baseprice))
          {
              //Do nothing
          }
          else
          {
              basepricejTextField.setBackground(Color.red);
              flag="false";
          }
          if(dv.checkNumeric(ceilingprice))
          {
              //Do nothing
          }
          else
          {
              ceilingjTextField.setBackground(Color.red);
              flag="false";
          }
          if(dv.checkNumeric(floorprice))
          {
              //Do nothing
          }
          else
          {
              floorpricejTextField.setBackground(Color.red);
              flag="false";
          }
          
          
           if(flag=="true")
        {
        //JOptionPane.showMessageDialog(null, "Information is saved and profile picture is uploaded.");
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Product was not successfully created. Please review your input and correct items marked in Red.");
            throw new Exception();
        }
          
          
        
        pid=pid+1;
        if(typejTextField.getText().equalsIgnoreCase("Computer"))
        {
        Product product =computerCollection.addProduct();
        product.setPid(Integer.toString(pid));
        product.setPname(name);
        product.setPtype(type);
        product.setPmodel(model);
        product.setPmodelid(modelid);
        product.setPdescription(description);
        product.setPvendorname(vendorname);
        product.setPbaseprice(baseprice);
        product.setPceilingprice(ceilingprice);
        product.setPfloorprice(floorprice);
        product.setPfeatures(features);
        product.setPbenefits(benifits);
        product.setImage((ImageIcon) profilepictureLbl.getIcon());
        JOptionPane.showMessageDialog(null, "Product successfully added and picture is uploaded");
        nameTextField.setBackground(Color.WHITE);
        modelidjTextField.setBackground(Color.WHITE); 
        typejTextField.setBackground(Color.WHITE);
        modeljTextField.setBackground(Color.WHITE);
        descriptionjTextArea.setBackground(Color.WHITE);
        vendornamejTextField.setBackground(Color.WHITE);
        ceilingjTextField.setBackground(Color.WHITE);
        floorpricejTextField.setBackground(Color.WHITE);
        basepricejTextField.setBackground(Color.WHITE);
        }
        
        else if(typejTextField.getText().equalsIgnoreCase("Printer"))
        {
        Product product =printerCollection.addProduct();
        product.setPid(Integer.toString(pid));
        product.setPname(nameTextField.getText());
        product.setPtype(typejTextField.getText());
        product.setPmodel(modelidjTextField.getText());
        product.setPmodelid(modelidjTextField.getText());
        product.setPdescription(descriptionjTextArea.getText());
        product.setPvendorname(vendornamejTextField.getText());
        product.setPbaseprice(basepricejTextField.getText());
        product.setPceilingprice(ceilingjTextField.getText());
        product.setPfloorprice(floorpricejTextField.getText());
        product.setPfeatures(featuresjTextArea.getText());
        product.setPbenefits(benifitsjTextArea.getText());
       product.setImage((ImageIcon) profilepictureLbl.getIcon());
        JOptionPane.showMessageDialog(null, "Product successfully added and picture is uploaded");
        nameTextField.setBackground(Color.WHITE);
        modelidjTextField.setBackground(Color.WHITE); 
        typejTextField.setBackground(Color.WHITE);
        modeljTextField.setBackground(Color.WHITE);
        descriptionjTextArea.setBackground(Color.WHITE);
        vendornamejTextField.setBackground(Color.WHITE);
        }
        
        else if(typejTextField.getText().equalsIgnoreCase("Hardware"))
        {
        Product product =hardwareCollection.addProduct();
        product.setPid(Integer.toString(pid));
        product.setPname(nameTextField.getText());
        product.setPtype(typejTextField.getText());
        product.setPmodel(modelidjTextField.getText());
        product.setPmodelid(modelidjTextField.getText());
        product.setPdescription(descriptionjTextArea.getText());
        product.setPvendorname(vendornamejTextField.getText());
        product.setPbaseprice(basepricejTextField.getText());
        product.setPceilingprice(ceilingjTextField.getText());
        product.setPfloorprice(floorpricejTextField.getText());
        product.setPfeatures(featuresjTextArea.getText());
        product.setPbenefits(benifitsjTextArea.getText());
        product.setImage((ImageIcon) profilepictureLbl.getIcon());
        JOptionPane.showMessageDialog(null, "Product successfully added and picture is uploaded");
        nameTextField.setBackground(Color.WHITE);
        modelidjTextField.setBackground(Color.WHITE); 
        typejTextField.setBackground(Color.WHITE);
        modeljTextField.setBackground(Color.WHITE);
        descriptionjTextArea.setBackground(Color.WHITE);
        vendornamejTextField.setBackground(Color.WHITE);
        }
        
        else if(typejTextField.getText().equalsIgnoreCase("Software"))
        {
        Product product =softwareCollection.addProduct();
        product.setPid(Integer.toString(pid));
        product.setPname(nameTextField.getText());
        product.setPtype(typejTextField.getText());
        product.setPmodel(modelidjTextField.getText());
        product.setPmodelid(modelidjTextField.getText());
        product.setPdescription(descriptionjTextArea.getText());
        product.setPvendorname(vendornamejTextField.getText());
        product.setPbaseprice(basepricejTextField.getText());
        product.setPceilingprice(ceilingjTextField.getText());
        product.setPfloorprice(floorpricejTextField.getText());
        product.setPfeatures(featuresjTextArea.getText());
        product.setPbenefits(benifitsjTextArea.getText());
        product.setImage((ImageIcon) profilepictureLbl.getIcon());
        JOptionPane.showMessageDialog(null, "Product successfully added and picture is uploaded");
        nameTextField.setBackground(Color.WHITE);
        modelidjTextField.setBackground(Color.WHITE); 
        typejTextField.setBackground(Color.WHITE);
        modeljTextField.setBackground(Color.WHITE);
        descriptionjTextArea.setBackground(Color.WHITE);
        vendornamejTextField.setBackground(Color.WHITE);
        }
       
        
        else
        JOptionPane.showMessageDialog(null, "Product was not successfully added");
        
     }
    
    catch (Exception e)
    {
        
    }
    }//GEN-LAST:event_SubmitjButtonActionPerformed

    private void attachjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachjButtonActionPerformed
         JFileChooser chooser = new JFileChooser(); //gives user the option of choosing from his System
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg"); //filter to allow only JPG files
        chooser.setFileFilter(filter);

        int returnVal = chooser.showOpenDialog(this);
        if (returnVal == javax.swing.JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();

            ImageIcon image = new ImageIcon(file.getAbsolutePath());

            Rectangle rect = profilepictureLbl.getBounds(); //Scaling image in the right height, and width

            Image scaledImage = image.getImage().getScaledInstance(rect.width, rect.height, Image.SCALE_DEFAULT);

            image = new ImageIcon(scaledImage);

            profilepictureLbl.setIcon(image);


        } else {
            JOptionPane.showMessageDialog(null, "Please use JPG files only"); //if User is not using JPG files
        }
    }//GEN-LAST:event_attachjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SubmitjButton;
    private javax.swing.JButton attachjButton;
    private javax.swing.JTextField basepricejTextField;
    private javax.swing.JTextArea benifitsjTextArea;
    private javax.swing.JTextField ceilingjTextField;
    private javax.swing.JTextArea descriptionjTextArea;
    private javax.swing.JTextArea featuresjTextArea;
    private javax.swing.JTextField floorpricejTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField modelidjTextField;
    private javax.swing.JTextField modeljTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JLabel profilepictureLbl;
    private javax.swing.JTextField typejTextField;
    private javax.swing.JTextField vendornamejTextField;
    // End of variables declaration//GEN-END:variables
}
